{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\GOFOOD\\\\mernapp\\\\src\\\\screens\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: '',\n    email: '',\n    password: '',\n    geolocation: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/createuser\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n          location: credentials.geolocation\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      if (!response.ok) {\n        // Handle other HTTP status codes if needed\n        console.error(\"Server error:\", response.statusText);\n        alert(\"Error during registration. Please try again.\");\n      } else if (!json.success) {\n        // Check for specific conditions indicating invalid credentials\n        if (json.errorCode === \"INVALID_CREDENTIALS\") {\n          alert(\"Invalid credentials. Please check your information.\");\n        } else {\n          alert(json.message || \"Enter Valid Credentials\");\n        }\n      } else {\n        // User registered successfully, you can redirect or do something else\n        alert(\"User registered successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n      alert(\"Error during registration. Please try again.\");\n    }\n  };\n  const onChange = event => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"m-3 btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"m-3 btn btn-danger\",\n          children: \"Already a user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Signup, \"2EeXL1qpk50CBYxvDL+iveRPmEc=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","credentials","setCredentials","name","email","password","geolocation","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","location","json","console","log","ok","error","statusText","alert","success","errorCode","message","onChange","event","target","value","children","className","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/GOFOOD/mernapp/src/screens/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n  const [credentials, setCredentials] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    geolocation: ''\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/createuser\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: credentials.name,\r\n          email: credentials.email,\r\n          password: credentials.password,\r\n          location: credentials.geolocation\r\n        })\r\n      });\r\n\r\n      const json = await response.json();\r\n      console.log(json);\r\n\r\n      if (!response.ok) {\r\n        // Handle other HTTP status codes if needed\r\n        console.error(\"Server error:\", response.statusText);\r\n        alert(\"Error during registration. Please try again.\");\r\n      } else if (!json.success) {\r\n        // Check for specific conditions indicating invalid credentials\r\n        if (json.errorCode === \"INVALID_CREDENTIALS\") {\r\n          alert(\"Invalid credentials. Please check your information.\");\r\n        } else {\r\n          alert(json.message || \"Enter Valid Credentials\");\r\n        }\r\n      } else {\r\n        // User registered successfully, you can redirect or do something else\r\n        alert(\"User registered successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);\r\n      alert(\"Error during registration. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setCredentials({ ...credentials, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ... (your existing form inputs) */}\r\n          <button type=\"submit\" className=\"m-3 btn btn-success\">Submit</button>\r\n          <Link to=\"/login\" className=\"m-3 btn btn-danger\">Already a user</Link>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}